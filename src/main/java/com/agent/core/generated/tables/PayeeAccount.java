/*
 * This file is generated by jOOQ.
*/
package com.agent.core.generated.tables;


import com.agent.core.generated.IfpayCcpay;
import com.agent.core.generated.Keys;
import com.agent.core.generated.tables.records.PayeeAccountRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import javax.annotation.Generated;
import java.math.BigInteger;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 收款账户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PayeeAccount extends TableImpl<PayeeAccountRecord> {

    private static final long serialVersionUID = -215099979;

    /**
     * The reference instance of <code>ifpay_ccpay.payee_account</code>
     */
    public static final PayeeAccount PAYEE_ACCOUNT = new PayeeAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PayeeAccountRecord> getRecordType() {
        return PayeeAccountRecord.class;
    }

    /**
     * The column <code>ifpay_ccpay.payee_account.PER_AMOUNT_MIN</code>. 单笔下限
     */
    public final TableField<PayeeAccountRecord, BigInteger> PER_AMOUNT_MIN = createField("PER_AMOUNT_MIN", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(19).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "单笔下限");

    /**
     * The column <code>ifpay_ccpay.payee_account.ID</code>. 主键ID
     */
    public final TableField<PayeeAccountRecord, ULong> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "主键ID");

    /**
     * The column <code>ifpay_ccpay.payee_account.ACCOUNT_TYPE</code>. 账户类型
     */
    public final TableField<PayeeAccountRecord, String> ACCOUNT_TYPE = createField("ACCOUNT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "账户类型");

    /**
     * The column <code>ifpay_ccpay.payee_account.ACCOUNT_ALIAS</code>. 账户别名
     */
    public final TableField<PayeeAccountRecord, String> ACCOUNT_ALIAS = createField("ACCOUNT_ALIAS", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "账户别名");

    /**
     * The column <code>ifpay_ccpay.payee_account.LOGIN_NO</code>. 登录账号
     */
    public final TableField<PayeeAccountRecord, String> LOGIN_NO = createField("LOGIN_NO", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "登录账号");

    /**
     * The column <code>ifpay_ccpay.payee_account.DAY_AMOUNT</code>. 单日限额（单位：分）
     */
    public final TableField<PayeeAccountRecord, BigInteger> DAY_AMOUNT = createField("DAY_AMOUNT", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(19).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "单日限额（单位：分）");

    /**
     * The column <code>ifpay_ccpay.payee_account.PER_AMOUNT</code>. 单笔限额（单位：分）
     */
    public final TableField<PayeeAccountRecord, BigInteger> PER_AMOUNT = createField("PER_AMOUNT", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(19).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "单笔限额（单位：分）");

    /**
     * The column <code>ifpay_ccpay.payee_account.TRADE_INTERVAL</code>. 交易间隔（单位：秒）
     */
    public final TableField<PayeeAccountRecord, BigInteger> TRADE_INTERVAL = createField("TRADE_INTERVAL", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "交易间隔（单位：秒）");

    /**
     * The column <code>ifpay_ccpay.payee_account.LAST_TRADE_DATE</code>. 上一次交易时间
     */
    public final TableField<PayeeAccountRecord, Timestamp> LAST_TRADE_DATE = createField("LAST_TRADE_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "上一次交易时间");

    /**
     * The column <code>ifpay_ccpay.payee_account.LOCALE_IP</code>. 上账服务器IP
     */
    public final TableField<PayeeAccountRecord, String> LOCALE_IP = createField("LOCALE_IP", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "上账服务器IP");

    /**
     * The column <code>ifpay_ccpay.payee_account.CRAWL_INTERVAL</code>. 爬取间隔
     */
    public final TableField<PayeeAccountRecord, BigInteger> CRAWL_INTERVAL = createField("CRAWL_INTERVAL", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DECIMAL_INTEGER)), this, "爬取间隔");

    /**
     * The column <code>ifpay_ccpay.payee_account.ISDELETED</code>. 1: deleted, 0: normal
     */
    public final TableField<PayeeAccountRecord, Integer> ISDELETED = createField("ISDELETED", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "1: deleted, 0: normal");

    /**
     * The column <code>ifpay_ccpay.payee_account.CREATED_DATE</code>. 创建时间
     */
    public final TableField<PayeeAccountRecord, Timestamp> CREATED_DATE = createField("CREATED_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>ifpay_ccpay.payee_account.UPDATE_DATE</code>. 修改时间
     */
    public final TableField<PayeeAccountRecord, Timestamp> UPDATE_DATE = createField("UPDATE_DATE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * The column <code>ifpay_ccpay.payee_account.unpay_limit</code>. 未付款数上限
     */
    public final TableField<PayeeAccountRecord, Integer> UNPAY_LIMIT = createField("unpay_limit", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "未付款数上限");

    /**
     * The column <code>ifpay_ccpay.payee_account.unqrcode_Limit</code>. 出码失败上限
     */
    public final TableField<PayeeAccountRecord, Integer> UNQRCODE_LIMIT = createField("unqrcode_Limit", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "出码失败上限");

    /**
     * The column <code>ifpay_ccpay.payee_account.MERCHANT_ID</code>. 商户号
     */
    public final TableField<PayeeAccountRecord, String> MERCHANT_ID = createField("MERCHANT_ID", org.jooq.impl.SQLDataType.VARCHAR.length(60), this, "商户号");

    /**
     * The column <code>ifpay_ccpay.payee_account.app_id</code>.
     */
    public final TableField<PayeeAccountRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * Create a <code>ifpay_ccpay.payee_account</code> table reference
     */
    public PayeeAccount() {
        this("payee_account", null);
    }

    /**
     * Create an aliased <code>ifpay_ccpay.payee_account</code> table reference
     */
    public PayeeAccount(String alias) {
        this(alias, PAYEE_ACCOUNT);
    }

    private PayeeAccount(String alias, Table<PayeeAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private PayeeAccount(String alias, Table<PayeeAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "收款账户表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return IfpayCcpay.IFPAY_CCPAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PayeeAccountRecord, ULong> getIdentity() {
        return Keys.IDENTITY_PAYEE_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PayeeAccountRecord> getPrimaryKey() {
        return Keys.KEY_PAYEE_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PayeeAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<PayeeAccountRecord>>asList(Keys.KEY_PAYEE_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PayeeAccount as(String alias) {
        return new PayeeAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PayeeAccount rename(String name) {
        return new PayeeAccount(name, null);
    }
}
