/*
 * This file is generated by jOOQ.
*/
package com.agent.core.generated;


import com.agent.core.generated.tables.CheckReview;
import com.agent.core.generated.tables.MenuResource;
import com.agent.core.generated.tables.OperationLog;
import com.agent.core.generated.tables.Operator;
import com.agent.core.generated.tables.Org;
import com.agent.core.generated.tables.Role;
import com.agent.core.generated.tables.RolePermission;
import com.agent.core.generated.tables.SysConfig;
import com.agent.core.generated.tables.records.CheckReviewRecord;
import com.agent.core.generated.tables.records.MenuResourceRecord;
import com.agent.core.generated.tables.records.OperationLogRecord;
import com.agent.core.generated.tables.records.OperatorRecord;
import com.agent.core.generated.tables.records.OrgRecord;
import com.agent.core.generated.tables.records.RolePermissionRecord;
import com.agent.core.generated.tables.records.RoleRecord;
import com.agent.core.generated.tables.records.SysConfigRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>poppy_agent</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CheckReviewRecord, Long> IDENTITY_CHECK_REVIEW = Identities0.IDENTITY_CHECK_REVIEW;
    public static final Identity<MenuResourceRecord, Long> IDENTITY_MENU_RESOURCE = Identities0.IDENTITY_MENU_RESOURCE;
    public static final Identity<OperationLogRecord, Long> IDENTITY_OPERATION_LOG = Identities0.IDENTITY_OPERATION_LOG;
    public static final Identity<OperatorRecord, Long> IDENTITY_OPERATOR = Identities0.IDENTITY_OPERATOR;
    public static final Identity<OrgRecord, Long> IDENTITY_ORG = Identities0.IDENTITY_ORG;
    public static final Identity<RoleRecord, Long> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<RolePermissionRecord, Long> IDENTITY_ROLE_PERMISSION = Identities0.IDENTITY_ROLE_PERMISSION;
    public static final Identity<SysConfigRecord, Long> IDENTITY_SYS_CONFIG = Identities0.IDENTITY_SYS_CONFIG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CheckReviewRecord> KEY_CHECK_REVIEW_PRIMARY = UniqueKeys0.KEY_CHECK_REVIEW_PRIMARY;
    public static final UniqueKey<MenuResourceRecord> KEY_MENU_RESOURCE_PRIMARY = UniqueKeys0.KEY_MENU_RESOURCE_PRIMARY;
    public static final UniqueKey<MenuResourceRecord> KEY_MENU_RESOURCE_U_IDX_RESOURCE_CODE = UniqueKeys0.KEY_MENU_RESOURCE_U_IDX_RESOURCE_CODE;
    public static final UniqueKey<OperationLogRecord> KEY_OPERATION_LOG_PRIMARY = UniqueKeys0.KEY_OPERATION_LOG_PRIMARY;
    public static final UniqueKey<OperatorRecord> KEY_OPERATOR_PRIMARY = UniqueKeys0.KEY_OPERATOR_PRIMARY;
    public static final UniqueKey<OperatorRecord> KEY_OPERATOR_U_IDX_OPERATOR_NO = UniqueKeys0.KEY_OPERATOR_U_IDX_OPERATOR_NO;
    public static final UniqueKey<OrgRecord> KEY_ORG_PRIMARY = UniqueKeys0.KEY_ORG_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_U_IDX_ROLE_NO = UniqueKeys0.KEY_ROLE_U_IDX_ROLE_NO;
    public static final UniqueKey<RolePermissionRecord> KEY_ROLE_PERMISSION_PRIMARY = UniqueKeys0.KEY_ROLE_PERMISSION_PRIMARY;
    public static final UniqueKey<RolePermissionRecord> KEY_ROLE_PERMISSION_U_IDX_MKEY = UniqueKeys0.KEY_ROLE_PERMISSION_U_IDX_MKEY;
    public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_PRIMARY = UniqueKeys0.KEY_SYS_CONFIG_PRIMARY;
    public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_IDX_CATEGORY_KEY = UniqueKeys0.KEY_SYS_CONFIG_IDX_CATEGORY_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CheckReviewRecord, Long> IDENTITY_CHECK_REVIEW = createIdentity(CheckReview.CHECK_REVIEW, CheckReview.CHECK_REVIEW.ID);
        public static Identity<MenuResourceRecord, Long> IDENTITY_MENU_RESOURCE = createIdentity(MenuResource.MENU_RESOURCE, MenuResource.MENU_RESOURCE.ID);
        public static Identity<OperationLogRecord, Long> IDENTITY_OPERATION_LOG = createIdentity(OperationLog.OPERATION_LOG, OperationLog.OPERATION_LOG.ID);
        public static Identity<OperatorRecord, Long> IDENTITY_OPERATOR = createIdentity(Operator.OPERATOR, Operator.OPERATOR.ID);
        public static Identity<OrgRecord, Long> IDENTITY_ORG = createIdentity(Org.ORG, Org.ORG.ID);
        public static Identity<RoleRecord, Long> IDENTITY_ROLE = createIdentity(Role.ROLE, Role.ROLE.ID);
        public static Identity<RolePermissionRecord, Long> IDENTITY_ROLE_PERMISSION = createIdentity(RolePermission.ROLE_PERMISSION, RolePermission.ROLE_PERMISSION.ID);
        public static Identity<SysConfigRecord, Long> IDENTITY_SYS_CONFIG = createIdentity(SysConfig.SYS_CONFIG, SysConfig.SYS_CONFIG.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CheckReviewRecord> KEY_CHECK_REVIEW_PRIMARY = createUniqueKey(CheckReview.CHECK_REVIEW, "KEY_check_review_PRIMARY", CheckReview.CHECK_REVIEW.ID);
        public static final UniqueKey<MenuResourceRecord> KEY_MENU_RESOURCE_PRIMARY = createUniqueKey(MenuResource.MENU_RESOURCE, "KEY_menu_resource_PRIMARY", MenuResource.MENU_RESOURCE.ID);
        public static final UniqueKey<MenuResourceRecord> KEY_MENU_RESOURCE_U_IDX_RESOURCE_CODE = createUniqueKey(MenuResource.MENU_RESOURCE, "KEY_menu_resource_u_idx_resource_code", MenuResource.MENU_RESOURCE.RESOURCE_CODE);
        public static final UniqueKey<OperationLogRecord> KEY_OPERATION_LOG_PRIMARY = createUniqueKey(OperationLog.OPERATION_LOG, "KEY_operation_log_PRIMARY", OperationLog.OPERATION_LOG.ID);
        public static final UniqueKey<OperatorRecord> KEY_OPERATOR_PRIMARY = createUniqueKey(Operator.OPERATOR, "KEY_operator_PRIMARY", Operator.OPERATOR.ID);
        public static final UniqueKey<OperatorRecord> KEY_OPERATOR_U_IDX_OPERATOR_NO = createUniqueKey(Operator.OPERATOR, "KEY_operator_u_idx_operator_no", Operator.OPERATOR.OPERATOR_NO);
        public static final UniqueKey<OrgRecord> KEY_ORG_PRIMARY = createUniqueKey(Org.ORG, "KEY_org_PRIMARY", Org.ORG.ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_U_IDX_ROLE_NO = createUniqueKey(Role.ROLE, "KEY_role_u_idx_role_no", Role.ROLE.ROLE_NO);
        public static final UniqueKey<RolePermissionRecord> KEY_ROLE_PERMISSION_PRIMARY = createUniqueKey(RolePermission.ROLE_PERMISSION, "KEY_role_permission_PRIMARY", RolePermission.ROLE_PERMISSION.ID);
        public static final UniqueKey<RolePermissionRecord> KEY_ROLE_PERMISSION_U_IDX_MKEY = createUniqueKey(RolePermission.ROLE_PERMISSION, "KEY_role_permission_u_idx_mkey", RolePermission.ROLE_PERMISSION.RESOURCE_CODE, RolePermission.ROLE_PERMISSION.ROLE_NO);
        public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_PRIMARY = createUniqueKey(SysConfig.SYS_CONFIG, "KEY_sys_config_PRIMARY", SysConfig.SYS_CONFIG.ID);
        public static final UniqueKey<SysConfigRecord> KEY_SYS_CONFIG_IDX_CATEGORY_KEY = createUniqueKey(SysConfig.SYS_CONFIG, "KEY_sys_config_idx_category_key", SysConfig.SYS_CONFIG.CATEGORY, SysConfig.SYS_CONFIG.KEY);
    }
}
