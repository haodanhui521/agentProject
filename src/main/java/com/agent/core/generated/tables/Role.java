/*
 * This file is generated by jOOQ.
*/
package com.agent.core.generated.tables;


import com.agent.core.generated.Keys;
import com.agent.core.generated.PoppyAgent;
import com.agent.core.generated.tables.records.RoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 角色
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Role extends TableImpl<RoleRecord> {

    private static final long serialVersionUID = -987455972;

    /**
     * The reference instance of <code>poppy_agent.role</code>
     */
    public static final Role ROLE = new Role();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoleRecord> getRecordType() {
        return RoleRecord.class;
    }

    /**
     * The column <code>poppy_agent.role.id</code>.
     */
    public final TableField<RoleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>poppy_agent.role.role_no</code>. 角色号
     */
    public final TableField<RoleRecord, String> ROLE_NO = createField("role_no", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "角色号");

    /**
     * The column <code>poppy_agent.role.parent</code>. 父亲角色编号
     */
    public final TableField<RoleRecord, String> PARENT = createField("parent", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "父亲角色编号");

    /**
     * The column <code>poppy_agent.role.category</code>. 角色分类
     */
    public final TableField<RoleRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(30).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色分类");

    /**
     * The column <code>poppy_agent.role.name</code>. 角色显示名称
     */
    public final TableField<RoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "角色显示名称");

    /**
     * The column <code>poppy_agent.role.desc</code>. 角色描述
     */
    public final TableField<RoleRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR.length(60).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色描述");

    /**
     * The column <code>poppy_agent.role.level</code>. 角色层级
     */
    public final TableField<RoleRecord, Short> LEVEL = createField("level", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "角色层级");

    /**
     * The column <code>poppy_agent.role.status</code>. normal:正常 disabled:关闭
     */
    public final TableField<RoleRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("normal", org.jooq.impl.SQLDataType.VARCHAR)), this, "normal:正常 disabled:关闭");

    /**
     * The column <code>poppy_agent.role.created_at</code>. 创建时间
     */
    public final TableField<RoleRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>poppy_agent.role.updated_at</code>. 上次更新时间
     */
    public final TableField<RoleRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "上次更新时间");

    /**
     * Create a <code>poppy_agent.role</code> table reference
     */
    public Role() {
        this("role", null);
    }

    /**
     * Create an aliased <code>poppy_agent.role</code> table reference
     */
    public Role(String alias) {
        this(alias, ROLE);
    }

    private Role(String alias, Table<RoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Role(String alias, Table<RoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "角色");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PoppyAgent.POPPY_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoleRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoleRecord> getPrimaryKey() {
        return Keys.KEY_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoleRecord>> getKeys() {
        return Arrays.<UniqueKey<RoleRecord>>asList(Keys.KEY_ROLE_PRIMARY, Keys.KEY_ROLE_U_IDX_ROLE_NO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Role as(String alias) {
        return new Role(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Role rename(String name) {
        return new Role(name, null);
    }
}
