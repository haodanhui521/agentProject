/*
 * This file is generated by jOOQ.
*/
package com.agent.core.generated.tables;


import com.agent.core.generated.Keys;
import com.agent.core.generated.PoppyAgent;
import com.agent.core.generated.tables.records.RolePermissionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 权限
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermission extends TableImpl<RolePermissionRecord> {

    private static final long serialVersionUID = 1178711252;

    /**
     * The reference instance of <code>poppy_agent.role_permission</code>
     */
    public static final RolePermission ROLE_PERMISSION = new RolePermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolePermissionRecord> getRecordType() {
        return RolePermissionRecord.class;
    }

    /**
     * The column <code>poppy_agent.role_permission.id</code>.
     */
    public final TableField<RolePermissionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>poppy_agent.role_permission.resource_code</code>. 资源编号
     */
    public final TableField<RolePermissionRecord, String> RESOURCE_CODE = createField("resource_code", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "资源编号");

    /**
     * The column <code>poppy_agent.role_permission.role_no</code>. 角色号
     */
    public final TableField<RolePermissionRecord, String> ROLE_NO = createField("role_no", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "角色号");

    /**
     * The column <code>poppy_agent.role_permission.created_at</code>. 创建时间
     */
    public final TableField<RolePermissionRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>poppy_agent.role_permission.updated_at</code>. 上次更新时间
     */
    public final TableField<RolePermissionRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "上次更新时间");

    /**
     * The column <code>poppy_agent.role_permission.status</code>. normal:正常 disabled:关闭
     */
    public final TableField<RolePermissionRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("normal", org.jooq.impl.SQLDataType.VARCHAR)), this, "normal:正常 disabled:关闭");

    /**
     * Create a <code>poppy_agent.role_permission</code> table reference
     */
    public RolePermission() {
        this("role_permission", null);
    }

    /**
     * Create an aliased <code>poppy_agent.role_permission</code> table reference
     */
    public RolePermission(String alias) {
        this(alias, ROLE_PERMISSION);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "权限");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PoppyAgent.POPPY_AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RolePermissionRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROLE_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolePermissionRecord> getPrimaryKey() {
        return Keys.KEY_ROLE_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolePermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<RolePermissionRecord>>asList(Keys.KEY_ROLE_PERMISSION_PRIMARY, Keys.KEY_ROLE_PERMISSION_U_IDX_MKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolePermission as(String alias) {
        return new RolePermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolePermission rename(String name) {
        return new RolePermission(name, null);
    }
}
