/*
 * This file is generated by jOOQ.
*/
package com.agent.core.generated;


import com.agent.core.generated.tables.*;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IfpayCcpay extends SchemaImpl {

    private static final long serialVersionUID = 40674360;

    /**
     * The reference instance of <code>ifpay_ccpay</code>
     */
    public static final IfpayCcpay IFPAY_CCPAY = new IfpayCcpay();

    /**
     * The table <code>ifpay_ccpay.app_release</code>.
     */
    public final AppRelease APP_RELEASE = AppRelease.APP_RELEASE;

    /**
     * 设备表
     */
    public final Machine MACHINE = Machine.MACHINE;

    /**
     * 商户表
     */
    public final Merchant MERCHANT = Merchant.MERCHANT;

    /**
     * 商户平台关系表
     */
    public final MerchantPlatform MERCHANT_PLATFORM = MerchantPlatform.MERCHANT_PLATFORM;

    /**
     * 收款账户表
     */
    public final PayeeAccount PAYEE_ACCOUNT = PayeeAccount.PAYEE_ACCOUNT;

    /**
     * 平台表
     */
    public final Platform PLATFORM = Platform.PLATFORM;

    /**
     * The table <code>ifpay_ccpay.qrcode_url</code>.
     */
    public final QrcodeUrl QRCODE_URL = QrcodeUrl.QRCODE_URL;

    /**
     * 重复付款订单
     */
    public final RepeatedPayment REPEATED_PAYMENT = RepeatedPayment.REPEATED_PAYMENT;

    /**
     * 交易订单表
     */
    public final TradeInfo TRADE_INFO = TradeInfo.TRADE_INFO;

    /**
     * No further instances allowed
     */
    private IfpayCcpay() {
        super("ifpay_ccpay", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AppRelease.APP_RELEASE,
            Machine.MACHINE,
            Merchant.MERCHANT,
            MerchantPlatform.MERCHANT_PLATFORM,
            PayeeAccount.PAYEE_ACCOUNT,
            Platform.PLATFORM,
            QrcodeUrl.QRCODE_URL,
            RepeatedPayment.REPEATED_PAYMENT,
            TradeInfo.TRADE_INFO);
    }
}
